%[ $LF_LEVEL -eq 1 ] || echo "Warning: You're in a nested lf instance!"

##### BASIC SETTINGS #####

set drawbox on
set icons on
set mouse on
set relativenumber on
set scrolloff 10
set shellopts '-eu'
set shell sh
set tabstop 2

# previewer script
# set previewer ~/.config/lf/pv.sh

# dynamic columns for view width
%{{
  w=$(tput cols)
  if [ $w -le 80 ]; then
    lf -remote "send $id set ratios 1:2"
  elif [ $w -le 160 ]; then
    lf -remote "send $id set ratios 1:2:3"
  else
    lf -remote "send $id set ratios 1:2:3:5"
  fi
}}



##### CUSTOM COMMANDS #####

# jump to dir with zoxide
cmd autojump %lf -remote "send $id cd '$(zoxide query $1)'"

# jump to file from fzf
cmd jump ${{
  res="$(fd . -H -d 4 | fzf | sed 's/\\/\\\\/g;s/"/\\"/g')"
  if [ -d "$res" ]; then
    cmd="cd"
  else
    cmd="select"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd link %{{
  set -- $(cat ~/.local/share/lf/files)
  mode="$1"
  shift
  if [ "$#" -lt 1 ]; then
    lf -remote "send $id echo no files to link"
    exit 0
  fi case "$mode" in
    # symbolically copy mode is indicating a soft link
    copy) ln -sr -t . -- "$@";;
    # while a move mode is indicating a hard link
    move) ln -t . -- "$@";;
  esac
  rm ~/.local/share/lf/files
  lf -remote "send clear"
}}

# recursively make dirs
cmd mkdir %{{
  IFS=" "
  mkdir -p -- "$*"
  lf -remote "send $id select \"$*\""
}}

cmd mkdirfromsels ${{
  set -f
  read newd
  mkdir -- "$newd"
  mv -- $fx "$newd"
}}

cmd rename-blank ${{
	lf -remote "send $id push :rename<space>"
}}

cmd drag $IFS="`printf '\n\t'`"; drag $fx &
cmd open-with %"$@" "$fx" &disown
cmd renamer $IFS="`printf '\n\t'`"; renamer $fx
cmd rip $IFS="`printf '\n\t'`"; rip $fx
cmd yank-basename $basename -a -- "$fx" | head -c-1 | xclip -selection clipboard
cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -selection clipboard



##### KEY BINDINGS #####

# unbind defaults
map m
map r

# goto shortcuts
map gc cd ~/.config/
map gd cd ~/downloads/
map gD cd ~/mxs/drive/Manufacturers\ &\ Clients/
map gF cd ~/mxs/ftp/
map gm cd ~/pictures/memes/
map gM cd /run/media/sugimoto/
map gn cd ~/notes/
map gP cd ~/mxs/projects/
map gp cd ~/pictures/
map gs cd ~/pictures/screenshots/
map gt cd ~/tmp/
map gw cd ~/pictures/wallpapers/

# kakoune-like bindings
map A rename                      # at the very end
map a push A<a-b><a-b><a-f>       # before extention
map b push A.bak<enter>           # at the very beginning
map i push A<c-a>                 # at the very beginning
map r push A<a-b><a-b><a-f><c-u>  # empty w/extention
map gj    bottom
map gk    top
map J     :toggle; down
map K     :toggle; up
map <a-n> search-prev
map <a-N> :toggle; search-prev
map N     :toggle; search-next
map S     push :glob-select<space>
map <a-S> push :glob-unselect<space>

# mouse bindings
map <m-1>    drag "$fx"
map <m-down> down
map <m-up>   up

# misc bindings
map .        set hidden!
map <esc>    clear
map <enter>  open
map o        push :open-with<space>

map D     rip                     # safer remove function (rip)
map f     :jump                   # jump to file with fzf choice
map F     push :autojump<space>'  # jump to dir with zoxide guess
map m     push %mkdir<space>      # create new dir
map M     mkdirfromsels           # create new dir with selections
map R     renamer                 # rename files using $EDITOR (pipe-rename)
map P     :link                   # press 'y->P' soft-link; press 'd->P' hard-link
map t     push $touch<space>      # new file
map x     $$f                     # execute current file (must be executable)
map X     !$f                     # execute current file (must be executable)
map Y     :yank-path              # copy path
