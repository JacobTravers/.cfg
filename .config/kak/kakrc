#Kakoune with Kakhis
#Author: Jacob Travers

# kill clippy, he takes precious real-estate
set-option global ui_options ncurses_assistant=off

set-option global tabstop 4
set-option global indentwidth 4

# min surrounding rows / columns 
set-option global scrolloff 1,3

# relative line numbers
add-highlighter global/ show-matching

# Highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error

# Exit with jj
hook global InsertChar j %{ try %{
    exec -draft hH <a-k>jj<ret> d
    exec <esc>
}}

# Use ripgrep instead of grep
set global grepcmd 'rg -n'

# Spacebar leader-key
map global normal <space> ,       -docstring 'leader'
map global normal <'> <space>     -docstring 'remove all sels except main'
map global normal <a-'> <a-space> -docstring 'remove main sel'
map global user   <space> :       -docstring 'commander'

# Comment Lines
define-command comment %{
    try %{
        execute-keys _
        comment-block
    } catch comment-line
}
map global user c -docstring 'comment' %{: comment<ret>}


################### Plugins ###################

source "~/.config/kak/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload
	map global user = -docstring 'plugins' ": plug-list<ret>"
plug "occivink/kakoune-find"
plug "jjk96/kakoune-fireplace"
plug "delapouite/kakoune-palette"
plug "occivink/kakoune-sudo-write"
plug "listentolist/kakoune-replicate"

# clipboard integration

plug "lePerdu/kakboard" %{
    hook global WinCreate .* %{ kakboard-enable }
}

plug "kak-lsp/kak-lsp" do %{
        cargo install --locked --force --path .
}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp|html|css|scss) %{
        lsp-enable-window
}


################# User Modes ##################

# quickly navigate buffers
plug "delapouite/kakoune-buffers" %{
    hook global WinDisplay .* info-buffers
        map global user b -docstring 'buffer' ": enter-buffers-mode<ret>"
        alias global bd delete-buffer
        alias global bf buffer-first
        alias global bl buffer-last
        alias global bo buffer-only
        alias global bo! buffer-only-force
}

# efficient useful fzf or skim in my case
plug "andreyorst/fzf.kak" config %{
    map global user f -docstring "fzf" ': fzf-mode<ret>'
} defer fzf %{
	set-option global fzf_implementation 'sk' 
    # set-option global fzf_file_command 'fd'
    set-option global fzf_highlight_command 'bat'
}

# Edit/extend/trim selections one by one
plug "occivink/kakoune-phantom-selection" %{
    declare-user-mode phantom-selection
        map global user p -docstring "phantom"               ": enter-user-mode phantom-selection<ret>"
        map global phantom-selection a -docstring "Add"      ": phantom-selection-add-selection<ret>"
        map global phantom-selection c -docstring "Clear"    ": phantom-selection-select-all; phantom-selection-clear<ret>"
        map global phantom-selection n -docstring "Next"     ": phantom-selection-iterate-next<ret>"
        map global phantom-selection p -docstring "Previous" ": phantom-selection-iterate-prev<ret>"
}

# select/edit surrounding chars and tags
plug "h-youhei/kakoune-surround"
	declare-user-mode surround
		map global surround r -docstring 'replace surround'        ": change-surround<ret>" 
		map global surround d -docstring 'delete surround'         ": delete-surround<ret>" 
		map global surround s -docstring 'select surround'         ": select-surround<ret>" 
		map global surround i -docstring 'surround'                ": surround<ret>" 
		map global surround D -docstring 'delete surrounding tag'  ": delete-surrounding-tag<ret>" 
		map global surround R -docstring 'replace surrounding tag' ": change-surrounding-tag<ret>" 
		map global surround S -docstring 'select surrounding tag'  ": select-surrounding-tag<ret>" 
		map global surround I -docstring 'surround with tag'       ": surround-with-tag<ret>" 
		map global user s 	  -docstring 'surround'                ": enter-user-mode surround<ret>" 

# spelling and grammar checking
declare-user-mode spell
    map global spell a -docstring 'add' 	": spell-add<ret>"
    map global spell c -docstring 'clear'   ": spell-clear<ret>"
    map global spell e -docstring 'enable'  ": spell-enable<ret>"
    map global spell n -docstring 'next'    ": spell-next<ret>"
    map global spell r -docstring 'replace' ": spell-replace<ret>"
    map global user  S -docstring 'spell' 	": enter-user-mode -lock spell<ret>"
    declare-option str language en-US
    define-command spell-enable %{
            hook window BufWritePost .* %{
                spell %opt{language}
            }
    }

# tree-sitter integrations 
plug "ul/kak-tree" %{
    declare-user-mode tree
        map global user t -docstring 'tree sitter' ": enter-user-mode tree<ret>"
        map global tree c -docstring 'children'    ": tree-select-children<ret>"
        map global tree f -docstring 'first child' ": tree-select-first-child<ret>"
        map global tree n -docstring 'next'        ": tree-select-next-node<ret>"
        map global tree p -docstring 'previous'    ": tree-select-previous-node<ret>"
        map global tree t -docstring 'syntax tree' ": tree-node-sexp<ret>"
        map global tree u -docstring 'parent'      ": tree-select-parent-node<ret>"
        map global tree . -docstring 'lock'        ": enter-user-mode -lock tree<ret>"
}

# connect kakoune to externals
plug "kakounedotcom/prelude.kak" %{
    plug "kakounedotcom/connect.kak" %{
		# clipboard history
		plug "alexherbo2/yank-ring.kak" %{
			require-module yank-ring
			require-module yank-ring-connect
            yank-ring-enable
            map global user y -docstring 'yank ring' ': yank-ring<ret>' 
        }
    }
}

# (un)wrap lines
map global user w -docstring 'wrap'   ": add-highlighter global/ wrap -word -indent<ret>"
map global user W -docstring 'unwrap' ": remove-highlighter global/wrap_-word_-indent<ret>"

############### UI Plugins ############### 

plug "evanrelf/number-toggle.kak" config %{
	require-module "number-toggle"
}
plug "caksoylar/kakoune-mysticaltutor" theme %{ colorscheme mysticaltutor }
plug "jordan-yee/kakoune-mysticaltutor-powerline"
plug "andreyorst/powerline.kak" defer powerline %{
	powerline-separator curve
    powerline-theme mysticaltutor
} config %{
    powerline-start
}
