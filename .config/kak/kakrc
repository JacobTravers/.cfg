# Kakoune with Kakhis
# Author: Jacob Travers

# Plugin manager
source "~/.config/kak/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

# kakoune.cr (coderunner)
plug "alexherbo2/kakoune.cr" 
evaluate-commands %sh{
  kcr init kakoune
}


################### DISPLAY  ################### 

# Kill clippy, he takes precious real-estate
set-option global ui_options terminal_assistant=none

# Min visible surrounding rows / columns 
set-option global scrolloff 1,3

plug "caksoylar/kakoune-mysticaltutor" theme %{ colorscheme mysticaltutor-trans }

# modeline using starship.rs
plug "eburghar/kakship" do %{
  cargo install --force --path . --root ~/.local
  [ ! -e $kak_config/starship.toml ] && cp starship.toml $kak_config/
} config %{
  kakship-enable
}

# Relative line numbers toggled on insert
plug "evanrelf/number-toggle.kak" config %{
  require-module "number-toggle"
}

# Rainbow delimiters + current scope
plug "crizan/kak-rainbower" %{
  hook global WinCreate .* %{ rainbow-enable-window }
}

# LSP Magic
plug "kak-lsp/kak-lsp" do %{
  cargo build --release --locked
  cargo install --force --path .
} config %{
  set global lsp_diagnostic_line_error_sign '║'
  set global lsp_diagnostic_line_warning_sign '┊'
  define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
  hook global WinSetOption filetype=(python|rust|html|css|sass|scss|json|yaml|sql) %{
    set-option window lsp_auto_highlight_references true
    set-option window lsp_hover_anchor false
    lsp-auto-hover-enable
    echo -debug "Enabling LSP for filtetype %opt{filetype}"
    lsp-enable-window
  }
  hook global KakEnd .* lsp-exit
}

############### FORMAT/LINT ############### 

source "~/.config/kak/languages/javascript"
source "~/.config/kak/languages/html"
source "~/.config/kak/languages/css"
source "~/.config/kak/languages/json"

# Tab definitions
set-option global tabstop 2
set-option global indentwidth 2

# Use space for tabs and alignments
plug "andreyorst/smarttab.kak" defer smarttab %{
} config %{
  hook global WinSetOption filetype=(?!makefile)(?!snippet).* %{
      expandtab
    set-option window softtabstop %opt{indentwidth}
    hook window WinSetOption indentwidth=([0-9]+) %{
      set-option window softtabstop %val{hook_param_capture_1}
    }
  }
  hook global WinSetOption filetype=(makefile|snippet) noexpandtab
}

# lint/format mode
declare-user-mode dev
  map global dev f  -docstring "format"         ':format<ret>'
  map global dev l  -docstring "lint"           ':lint<ret>'
  map global dev j  -docstring "next lint"      ':lint-next-message<ret>'
  map global dev k  -docstring "previous lint"  ':lint-previous-message<ret>'

# Emmet completions using npm emmet-cli
define-command emmet %{
  execute-keys "giGl| emmet <ret>" 
}
hook global WinSetOption filetype=(javascript|html) %{
  map global dev e -docstring "emmet" ':emmet<ret>'
}


###################### UTILITY ###################### 

# Alacritty integration
plug "alexherbo2/alacritty.kak" %{
  alias global terminal alacritty-terminal
  alias global popup alacritty-terminal-popup
}

plug "occivink/kakoune-sudo-write"

# Clipboard integration
plug "lePerdu/kakboard" %{
  hook global WinCreate .* %{ kakboard-enable }
}

# Auto-pairs provided by KCR
plug "alexherbo2/auto-pairs.kak" %{
  enable-auto-pairs
}
# Use ripgrep instead of grep
set global grepcmd 'rg -n'

###################### NORMAL MODE ###################### 


##########REMAPPINGS

map global normal <space> , -docstring "leader-key"
map global user   <space> : -docstring "prompt"

map global normal w b     -docstring "select previous word"
map global normal W B     -docstring "extend previous word"
map global normal <a-w> <a-b> -docstring "select previous BIG-WORD"
map global normal <a-W> <a-B> -docstring "extend prevous BIG-WORD"

map global normal <esc> <space> -docstring "deselect all but current selection"

#########AUGMENTATION

map global normal D     -docstring "vim D"  'Gld'
map global normal <c-q> -docstring "close buffer/client"  ':bd;q'

# Select/add next match
map global normal v           -docstring "select next match"      '*n'
map global normal <a-v>       -docstring "deselect current sel"   '*<a-n>'
map global normal V           -docstring "add next match"         '*N'
map global normal <a-V>       -docstring "add previous match"     '*<a-N>'
map global normal <a-percent> -docstring "select all matches"     '*%s<ret>)'

# case insensitive search
map global normal /     -docstring "search"                      '/(?i)'
map global normal <a-/> -docstring "search backwards"            '<a-/>(?i)'
map global normal ?     -docstring "(extend) search"             '?(?i)'
map global normal <a-?> -docstring "(extend) search backwards"   '<a-?>(?i)'

# paste in insert mode
define-command -hidden insert-paste %{
    execute-keys "<esc>;Pi"
}
map global insert <c-v> -docstring "insert mode paste" '<esc>:insert-paste<ret>'

# (un)Comment Lines
define-command comment %{
  try %{
    execute-keys _
    comment-block
  } catch comment-line
}
map -docstring "comment" global normal <#> %{:comment<ret>}

# Better match function
plug "useredsa/dynamic-matching.kak" %{
  dynamic-matching-dmatch-conf
  map global normal m -docstring "select dynamic match"  ':enter-user-mode dmatch<ret>'
  map global normal M -docstring "add dynamic match"     ':enter-user-mode Dmatch<ret>'
}

# Kakoune.cr (coderunner) implementations
map global normal <c-t> -docstring "New client"    ':new<ret>'
map global normal <c-n> -docstring "New terminal"  ':connect terminal<ret>'
map global normal +     -docstring "New popup"     ':connect popup<ret>'

map global normal B     -docstring "Open buffers"           ':connect popup kcr fzf buffers<ret>'
map global normal <c-g> -docstring "Open files"             ':connect popup kcr fzf files<ret>'
map global normal <c-s> -docstring "Find files by content"  ':connect popup kcr fzf grep<ret>'

map global normal <c-k> -docstring "Joshuto"  ':connect popup joshuto<ret>'
map global normal <c-l> -docstring "Lazygit"  ':connect terminal lazygit<ret>'


################# MODES ##################

hook global WinSetOption filetype=(man) %{
  set-option buffer readonly
  map buffer normal u <c-u>
  map buffer normal d <c-d>
}

# Plugin manager
map global user = -docstring "plug"  ':plug-list<ret>'

# Navigate buffers
plug "delapouite/kakoune-buffers" %{
  hook global WinDisplay .* info-buffers
    map global normal b ":enter-buffers-mode<ret>"
    alias global bd delete-buffer
    alias global bf buffer-first
    alias global bl buffer-last
    alias global bo buffer-only
    alias global bo! buffer-only-force
}

map global user d -docstring "dev"  ':enter-user-mode dev<ret>'

plug "occivink/kakoune-find" %{
  map global user f -docstring "find"  ':find'
}

map global user k -docstring "kakboard"  ':kakboard-toggle <ret>' 

map global user l -docstring "LSP" %{:enter-user-mode lsp<ret>}
  map global lsp <minus> -docstring "disable"  ':lsp-disable-window<ret>'
  map global lsp <plus>  -docstring "enable"   ':lsp-enable-window<ret>'

# Edit/extend/trim selections one by one
plug "occivink/kakoune-phantom-selection" %{
  declare-user-mode phantom
  map global user p -docstring "phantom"      ':enter-user-mode phantom<ret>'
  map global phantom a -docstring "Add"       ':phantom-selection-add-selection<ret>'
  map global phantom c -docstring "Clear"     ':phantom-selection-select-all; phantom-selection-clear<ret>'
  map global phantom n -docstring "Next"      ':phantom-selection-iterate-next<ret>'
  map global phantom p -docstring "Previous"  ':phantom-selection-iterate-prev<ret>'
}

# Select/edit surrounding chars and tags
plug "h-youhei/kakoune-surround"
  declare-user-mode surround
  map global normal <'> ":enter-user-mode surround<ret>" 
  map global surround d -docstring "delete"             ':delete-surround<ret>' 
  map global surround i -docstring "insert"             ':surround<ret>' 
  map global surround r -docstring "replace"            ':change-surround<ret>' 
  map global surround s -docstring "select"             ':select-surround<ret>' 
  map global surround D -docstring "delete tag"         ':delete-surrounding-tag<ret>' 
  map global surround I -docstring "surround with tag"  ':surround-with-tag<ret>' 
  map global surround R -docstring "replace tag"        ':change-surrounding-tag<ret>' 
  map global surround S -docstring "select tag"         ':select-surrounding-tag<ret>' 

plug 'delapouite/kakoune-mirror' %{
  map global normal <a-I> ': enter-user-mode -lock mirror<ret>'
}

map global user l -docstring "LSP" %{:enter-user-mode lsp<ret>}

# Dynamic match mode
map global user m  -docstring "dmatch"  ':enter-user-mode -lock dmatch<ret>'

# script for applying math
define-command execute-keys-with-register -params 2 -docstring 'execute keys with register' %{
  evaluate-commands -save-regs '"' %{
    set-register '"' %arg{2}
    execute-keys '""' %arg{1}
  }
} 
define-command math -docstring 'do the maths' %{
  prompt math: %{
    execute-keys-with-register 'a<c-r>"<esc>|bc<ret>' %val{text}
  }
}
map global user M -docstring "math"  ':math<ret>'

plug 'https://gitlab.com/kstr0k/mru-files.kak.git' %{
  require-module kakhist
  kakhist-init
} demand mru-files %{ 
  map global user r -docstring "recent"  ': mru-files<ret>'
}

# Spelling and grammar checking
declare-user-mode spell
  map global user  s -docstring "spell"    ':spell<ret>:enter-user-mode -lock spell<ret>'
  map global spell a -docstring "add"      ':spell-add<ret>'
  map global spell c -docstring "clear"    ':spell-clear<ret>'
  map global spell e -docstring "enable"   ':spell<ret>'
  map global spell n -docstring "next"     ':spell-next<ret>'
  map global spell r -docstring "replace"  ':spell-replace<ret>'
  declare-option str language en-US

# Tree-sitter syntax parsing and functionality
plug "ul/kak-tree" %{
  declare-user-mode tree
  map global user t -docstring "tree sitter"  ':enter-user-mode tree<ret>'
  map global tree t -docstring "syntax tree"  ':tree-node-sexp<ret>'
  map global tree c -docstring "children"     ':tree-select-children<ret>'
  map global tree h -docstring "parent"       ':tree-select-parent-node<ret>'
  map global tree j -docstring "next"         ':tree-select-next-node<ret>'
  map global tree k -docstring "previous"     ':tree-select-previous-node<ret>'
  map global tree l -docstring "first child"  ':tree-select-first-child<ret>'
  map global tree . -docstring "lock"         ':enter-user-mode -lock tree<ret>'
}

plug "kkga/ui.kak" %{
  map global user u -docstring "ui mode"  ':enter-user-mode ui<ret>'
  set-option global ui_wrap_flags -word -indent -marker ~~
  hook global WinCreate .* %{
    ui-todos-toggle
    ui-lint-toggle
    ui-git-diff-toggle
    }
}

# write to file
map global user w -docstring "write"  ':w<ret>'

#FIXME: broken with kcr, waiting for fix
# Clipboard history
# plug "alexherbo2/yank-ring.kak" %{
#   require-module yank-ring
#   require-module yank-ring-connect
#   yank-ring-enable
#   map global user y -docstring "yank ring" ':yank-ring<ret>' 
# }

