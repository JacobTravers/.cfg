#!/bin/dash
#Jacob Travers
#Kahkis Konfig

set-option global tabstop 4
set-option global indentwidth 4
set-option global scrolloff 1,3
add-highlighter global/ number-lines -hlcursor -relative
add-highlighter global/ wrap -word -indent
add-highlighter global/ show-matching

# Disable Clippy
set-option global ui_options ncurses_assistant=off

# Highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error

# Exit with jj
hook global InsertChar j %{ try %{
    exec -draft hH <a-k>jj<ret> d
    exec <esc>
}}

# Use ripgrep instead of grep
set global grepcmd 'rg -n'

# Spacebar leader
map global normal <space> , -docstring 'leader'
map global normal <'> <space> -docstring 'remove all sels except main'
map global normal <a-'> <a-space> -docstring 'remove main sel'
map global user   <space> : -docstring 'commander'

# Comment Lines
define-command comment %{
    try %{
        execute-keys _
        comment-block
    } catch comment-line
}
map global user c -docstring 'comment' %{: comment<ret>}



source "~/.config/kak/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

# User Modes

plug 'delapouite/kakoune-buffers' %{
    hook global WinDisplay .* info-buffers
        map global normal ^ q
        map global normal <a-^> Q
        map global normal q b
        map global normal Q B
        map global normal <a-q> <a-b>
        map global normal <a-Q> <a-B>
        map global normal b ': enter-buffers-mode<ret>' -docstring 'buffers'
        map global normal B ': enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)'
        map global user b ':enter-buffers-mode<ret>' -docstring 'buffers…'
        map global user B ':enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)…'
        alias global bd delete-buffer
        alias global bf buffer-first
        alias global bl buffer-last
        alias global bo buffer-only
        alias global bo! buffer-only-force
}
plug "andreyorst/fzf.kak" config %{
    map global user f -docstring "fzf" ': fzf mode<ret>'
}

plug 'occivink/kakoune-phantom-selection' %{
    declare-user-mode phantom-selection
        map global user p -docstring "phantom" ": enter-user-mode phantom-selection<ret>"
        map global phantom-selection n -docstring "Next" ": phantom-selection-iterate-next<ret>"
        map global phantom-selection p -docstring "Previous" ": phantom-selection-iterate-prev<ret>"
        map global phantom-selection c -docstring "Clear" ": phantom-selection-select-all; phantom-selection-clear<ret>"
        map global phantom-selection a -docstring "Add" ": phantom-selection-add-selection<ret>"
}

plug 'h-youhei/kakoune-surround'
	declare-user-mode surround
		map global surround i -docstring 'surround'               ': surround<ret>' 
		map global surround s -docstring 'select surround'        ': select-surround<ret>' 
		map global surround r -docstring 'replace surround'       ': change-surround<ret>' 
		map global surround d -docstring 'delete surround'        ': delete-surround<ret>' 
		map global surround I -docstring 'surround with tag'      ': surround-with-tag<ret>' 
		map global surround S -docstring 'select surrounding tag' ': select-surrounding-tag<ret>' 
		map global surround R -docstring 'change surrounding tag' ': change-surrounding-tag<ret>' 
		map global surround D -docstring 'delete surrounding tag' ': delete-surrounding-tag<ret>' 
		map global user s 	  -docstring 'surround'               ':enter-user-mode surround<ret>' 

declare-user-mode spell
    map global spell a -docstring 'add' ": spell-add<ret>"
    map global spell e -docstring 'enable'  ": spell-enable<ret>"
    map global spell r -docstring 'replace' ": spell-replace<ret>"
    map global spell n -docstring 'next'    ": spell-next<ret>"
    map global spell c -docstring 'clear'   ": spell-clear<ret>"
    map global user  S -docstring 'spell' 	": enter-user-mode -lock spell<ret>"
    declare-option str language en-US
    define-command spell-enable %{
            hook window BufWritePost .* %{
                spell %opt{language}
            }
    }

plug "ul/kak-tree" %{
    declare-user-mode tree
        map global tree u ': tree-select-parent-node<ret>' -docstring 'parent'
        map global tree n ': tree-select-next-node<ret>' -docstring 'next'
        map global tree p ': tree-select-previous-node<ret>' -docstring 'previous'
        map global tree c ': tree-select-children<ret>' -docstring 'children'
        map global tree f ': tree-select-first-child<ret>' -docstring 'first child'
        map global tree t ': tree-node-sexp<ret>' -docstring 'show syntax tree'
        map global tree . ': enter-user-mode -lock tree<ret>' -docstring 'lock'
        map global user t ': enter-user-mode tree<ret>' -docstring 'tree sitter'
}

plug 'alexherbo2/prelude.kak' %{
    plug 'alexherbo2/connect.kak' %{
        plug 'alexherbo2/yank-ring.kak' %{
            map global user y ': yank-ring<ret>' -docstring 'yank ring'
        }
        require-module yank-ring-connect
        hook global .* %{ yank-ring-enable }
    }
}

plug "lePerdu/kakboard" %{
        hook global .* %{ kakboard-enable }
}

plug 'occivink/kakoune-sudo-write'
plug 'TeddyDD/kakoune-edit-or-dir'
plug 'jjk96/kakoune-extra-filetypes'
plug 'occivink/kakoune-find'
plug 'jjk96/kakoune-fireplace'
plug 'delapouite/kakoune-palette'
plug 'jjk96/kakoune-rainbow' %{
     hook global winDisplay .* %{ rainbow-enable }
    }
plug "kak-lsp/kak-lsp" do %{
        cargo install --locked --force --path .
}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp|html|css|scss) %{
        lsp-enable-window
}
plug 'listentolist/kakoune-replicate'
plug "andreyorst/powerline.kak"
plug 'caksoylar/kakoune-mysticaltutor' theme %{ colorscheme mysticaltutor }
plug 'jordan-yee/kakoune-mysticaltutor-powerline' defer powerline %{
	    powerline-theme mysticaltutor}
